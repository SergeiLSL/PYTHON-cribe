"""
5.3.1 Обработка исключений try-except

https://stepik.org/lesson/427821/step/1?unit=417706
"""

"""
Разберем еще один блок - finally, который указывается один раз
"""
# s = 'hello'
# d = {}
#
# try:
#     1 + 8
# except Exception:  # Сюда пойдут все исключения, которые могут быть
#     print('error')  # error
# finally:
#     print('end')  # этот блок выполняется всегда, независимо
#     # от того было исключение или нет
#
# print('=' * 30)

"""
Для чего же нужен этот блок finally?
Допустим вы работаете с файлом (хотим открыть и которого у вас нет)
и делем какую обработку, например в функцию и в этом блоке могут возникнуть
ошибки, но мы не хоти их обрабатывать каким то образом. 
Тогда конструкция может быть вот такая
"""
# s = 'hello'
# d = {}
# f = open('123.txt')

# try:
#     execute(f)
# finally:
#     print('end')  # этот блок выполняется всегда, независимо
#     # от того было исключение или нет
#
# print('*' * 30)
"""
В случае, если возникнет ошибка, то в памяти сохранится этот файл f,
а нам это не желательно. Чтобы избежать уитечки памяти и закрыть файл, 
можно поступить следующим образом
"""

s = 'hello'
d = {}
# f = open('123.txt')

try:
    1/5
finally:
    print('end')  # этот блок выполняется всегда, независимо
    # f.close()

"""
finally в отличие от except указывается только один раз
"""