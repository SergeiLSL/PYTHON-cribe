"""
Представление числа
"""
"""
При обычном определении числовой переменной она получает значение 
в десятичной системе. Но кроме десятичной в Python мы можем использовать 
двоичную, восьмеричную и шестнадцатеричную системы.

Для определения числа в двоичной системе перед его значением ставится 0 и префикс b:
"""
x = 0b101   # 101 в двоичной системе
print(x)  # 101 в двоичной системе равно 5
x = 0b10101   # 10101 в двоичной системе
print(x)  # 10101 в двоичной системе равно 21
"""
Для определения числа в восьмеричной системе перед его значением ставится 0 и префикс o:
"""
a = 0o11    # 11 в восьмеричной системе
print(a)  # 11 в восьмеричной системе равно 9
a = 0o101    # 101 в восьмеричной системе
print(a)  # 11 в восьмеричной системе равно 65
"""
Для определения числа в шестнадцатеричной системе перед его значением ставится 0 и префикс x:
"""
y = 0x0a
print(y)        # число в шестнадцатеричной системе равно 10
y = 0x0b
print(y)        # число в шестнадцатеричной системе равно 11
y = 0x0ba
print(y)        # число в шестнадцатеричной системе равно 186
y = 0x1ba
print(y)        # число в шестнадцатеричной системе равно 442
y = 0x2ba
print(y)        # число в шестнадцатеричной системе равно 698
"""
И с числами в других системах измерения также можно проводить арифметические операции:
"""
z = 0b101   # 5
t = 0x0a    # 10
s = z + t   # 15
print("{0} in binary {0:08b}   in hex {0:02x} in octal {0:02o}".format(z))
# 15 in binary 00001111   in hex 0f   in octal 17
"""
Для вывода числа в различных системах исчисления используются функция format, 
которая вызывается у строки. В эту строку передаются различные форматы. 
Для двоичной системы "{0:08b}", где число 8 указывает, сколько знаков должно 
быть в записи числа. Если знаков указано больше, чем требуется для числа, 
то ненужные позиции заполняются нулями. Для шестнадцатеричной системы 
применяется формат "{0:02x}". И здесь все аналогично - запись числа состоит 
из двух знаков, если один знак не нужен, то вместо него вставляется ноль. 
А для записи в восьмеричной системе испольуется формат "{0:02o}".

Результат работы скрипта:
15 in binary 00001111   in hex 0f   in octal 17
"""