"""
Функции преобразования чисел
"""
"""
Ряд встроенных функций в Python позволяют работать с числами. 
В частности, функции int() и float() позволяют привести значение 
к типу int и float соответственно.

Например, пусть у нас будет следующий код:
"""
first_number1 = "2"
second_number1 = 3
# third_number = first_number + second_number  # вызывает ошибку
""""
Мы ожидаем, что "2" + 3 будет равно 5. Однако этот код сгенерирует исключение, 
так как первое число на самом деле представляет строку. И чтобы все заработало 
как надо, необходимо привести строку к числу с помощью функции int():
"""
first_number2 = "2"
second_number2 = 3
third_number = int(first_number2) + second_number2
print(third_number)  # 5
"""
Аналогичным образом действует функция float(), которая преобразует в число с 
плавающей точкой. Но вообще с дробными числами надо учитывать, что результат 
операций с ними может быть не совсем точным. Например:
"""
first_number = 2.0001
second_number = 5
third_number = first_number / second_number
print(third_number)  # 0.40002000000000004
"""
В данном случае мы ожидаем получить число 0.40002, однако в конце через 
ряд нулей появляется еще какая-то четверка. 
Или еще одно выражение:
"""
print(2.0001 + 0.1)  # 2.1001000000000003
"""
В этот случае для округления результата мы можем использовать функцию round():
"""
first_number = 2.0001
second_number = 0.1
third_number = first_number + second_number
print(round(third_number, 4))  # 2.1001
"""
Первый параметр функции - округляемое число, а второй - сколько знаков 
после запятой должно содержать получаемое число.
"""